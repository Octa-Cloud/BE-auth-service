# =============================================================================
# Saga Orchestration Service Helm Chart Values
# =============================================================================

# =============================================================================
# 이미지 설정
# =============================================================================
image:
  repository: octacloud/saga-orchestration-service
  tag: "419c99e6357e402a617057fe6836a0e7a677815f-18614370502"
  pullPolicy: IfNotPresent

# =============================================================================
# 서비스 설정
# =============================================================================
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

# =============================================================================
# 배포 설정
# =============================================================================
replicaCount: 1

# =============================================================================
# 리소스 설정
# =============================================================================
resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 256Mi

# =============================================================================
# 헬스 체크 설정
# =============================================================================
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10

# =============================================================================
# 환경 변수 설정
# =============================================================================
env:
  # Database configuration
  RDB_USERNAME: "monguser"
  RDB_PASSWORD: "mongpassword123"
  RDB_URL: "jdbc:mysql://localhost:3306/mong-saga?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
  
  # Kafka configuration
  KAFKA_BOOTSTRAP_SERVERS: "pkc-gq2xn.asia-northeast3.gcp.confluent.cloud:9092"
  KAFKA_SASL_MECHANISM: "PLAIN"
  KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
  
  # Logging
  LOG_LEVEL: "INFO"
  LOG_PROFILE: "text"

# =============================================================================
# 서비스 계정 설정
# =============================================================================
serviceAccount:
  create: true
  name: ""

# =============================================================================
# ConfigMap 설정
# =============================================================================
configMap:
  create: true
  name: ""

# =============================================================================
# Secret 설정
# =============================================================================
secrets:
  create: true
  name: ""
  # 민감정보는 Sealed Secrets로 관리합니다. (빈 값 유지)
  KAFKA_SASL_USERNAME: ""
  KAFKA_SASL_PASSWORD: ""

sealedSecrets:
  enabled: true
  encryptedData:
    # 현재 클러스터의 공개키로 암호화된 Kafka 인증 정보
    KAFKA_SASL_USERNAME: "AgCjCpNrWBlDm7NbGMw0LrGUixmTWj5Pmqqf4c5zn4PhdMOyURAEmGloHV1htiQynn8PhEpn+FFVei1pzsPfsYG224zkxJfY/1g5ZF8jVXZTbwa12IuOXjUZdnJsDjWmZQZoch5acIgwxQaOFjiChrvErEnOJXMhhqnG7hKg+zstIzX+/9lUCaGDLwS3G4euVEHKPa7XbI33U538p1+4w+oAeqZ1cvmQfKcjm7jJoJ2J7UeortxyYdJYNG2fIUWim6po8LSSt260Qo/9njHf0xR6XkLF9Da9Or005eXL41FPMvR+9ZOBBHUbVv+o+izBo7B3L+TuGcQs8zxkFSONfJahbGT9NRprQmLNpZbfEJEf3MWOLAQ6e/UD93SP2weqN91SSwNMZt/30sRn15RceJMnEqfQvQ6kgLY01U9SgTQwVQ8peuoUQui7cK7sjyL2qL7yIKh3vxyUhFu5dYKzfwdjkZbGCHCyB0ClCKL72TPgcRnAsKRDrPHC7ss51oKFhZtHl1IdoXwUWMSawOw47iRFF1hRfgIigs+Yi7oci3iD7G/lMOmyOt1nKlZDFZbfvL4d8Eo5DxgslPM+ausWmQjBEjzGlpXq4LBsYde6yukMfsGrxoaqF56zPLorM3vXgP9Qv7b65b/l+1Cqog1mlPnKnzYzcEU7gYR6tJxpV/GGAUUrBDJYVXpWZVDfA37B8XjTQsiKV/HRaFnNtvZNlVh+"
    KAFKA_SASL_PASSWORD: "AgCLX3BEM7h5+VVQ1N6sLwA//UQXXuYpYmMKPDCVvJ3Qh4b2x18dEH2z2xA8zlU5yTKNgXlOZGnPM5iI9+Hfus6tQMTY4A0AkXNzXATm54PZMHz1OlcUNkOBXxhhU0zUZ8NZ59B8ssxLg6s+fkUzrEb+so5WRtzOzTUQOr/1UledeEsJxKNRr8XNBL5VqZkwt/Lj5FmgOUymz6ZuQlYvpavuTtM8m9Q2V47kDE6+xEhVpIMVTDbnxaBsYXd/7wxE4PsyWGfY7S9Dmjp7PmEJZvqnw7TQPc4HIyTvminOK2fJ63/yLNnl9CE2pLBAelqitoc7Rc8p/YZdGauygbQXfex3K3Egv5ygaz9OL1TQJ5OW7YE8k3YqIxBh50wx4kY3kdpGiCEH3QRF4JQbCz1dRUftbOwyeg4a/4voIUTrQGoUtO2vCSu3xd9wpBaDhj0vgx+DRKYlnidxxVk6+/QTGlIl40/7wxQrCnXR+Sb+zWlzmd8Rc4nTKAgL83eEr2tFC//QegxOD5MIr+5uGQktCAER3JA5NGZNQHWMmqr+NGt6Xt3pC+q6ntV019F41sTSYdGsJ7+gcGt5HYX5W/6dmma66FFv9atdGnTam6WbFOylBmwoQwPt1jNOmplpg4naqsfgFiQYsK6IM45UXC6D80j+gV0sJofQceKqxf3U1ZnwHEv87B6ARyjABNsIkAW9GhuAxmGwuHo9JBqQP76E1AEtTGruNzbKbyMp/Rfgjpt/ZDSTjaLGbuLmJX9rKQcFNoEFGTPMD6ucteVzdopf5iUN"

# =============================================================================
# Ingress 설정
# =============================================================================
ingress:
  enabled: false  # Saga orchestration service는 내부 서비스이므로 ingress 불필요

# =============================================================================
# 노드 선택자
# =============================================================================
nodeSelector: {}

# =============================================================================
# 톨러레이션
# =============================================================================
tolerations: []

# =============================================================================
# 어피니티
# =============================================================================
affinity: {}

# =============================================================================
# Cloud SQL Proxy 설정
# =============================================================================
cloudSqlProxy:
  enabled: true
  image: gcr.io/cloudsql-docker/gce-proxy:latest
  port: 3306
  instance: mong-develop:asia-northeast3:mong-mysql

# =============================================================================
# 추가 설정
# =============================================================================
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
imagePullSecrets: []

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70

lifecycle: {}
