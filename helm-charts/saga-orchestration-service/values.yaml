# =============================================================================
# Saga Orchestration Service Helm Chart Values
# =============================================================================

# =============================================================================
# 이미지 설정
# =============================================================================
image:
  repository: octacloud/saga-orchestration-service
  tag: "419c99e6357e402a617057fe6836a0e7a677815f-18614370502"
  pullPolicy: IfNotPresent

# =============================================================================
# 서비스 설정
# =============================================================================
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

# =============================================================================
# 배포 설정
# =============================================================================
replicaCount: 1

# =============================================================================
# 리소스 설정
# =============================================================================
resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 256Mi

# =============================================================================
# 헬스 체크 설정
# =============================================================================
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 300
  periodSeconds: 30
  failureThreshold: 5
  timeoutSeconds: 10

# =============================================================================
# 환경 변수 설정
# =============================================================================
env:
  # Database configuration
  RDB_USERNAME: "monguser"
  RDB_PASSWORD: "mongpassword123"
  RDB_URL: "jdbc:mysql://localhost:3306/mong-saga?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
  
  # Kafka configuration
  KAFKA_BOOTSTRAP_SERVERS: "pkc-gq2xn.asia-northeast3.gcp.confluent.cloud:9092"
  KAFKA_SASL_MECHANISM: "PLAIN"
  KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
  
  # Logging
  LOG_LEVEL: "INFO"
  LOG_PROFILE: "text"

# =============================================================================
# 서비스 계정 설정
# =============================================================================
serviceAccount:
  create: true
  name: ""

# =============================================================================
# ConfigMap 설정
# =============================================================================
configMap:
  create: true
  name: ""

# =============================================================================
# Secret 설정
# =============================================================================
secrets:
  create: true
  name: ""
  # 민감정보는 Sealed Secrets로 관리합니다. (빈 값 유지)
  KAFKA_SASL_USERNAME: ""
  KAFKA_SASL_PASSWORD: ""

sealedSecrets:
  enabled: true
  encryptedData:
    # 현재 클러스터의 공개키로 암호화된 Kafka 인증 정보
    KAFKA_SASL_USERNAME: "AgByBNTcsyEMDLSvB20ULRUIQhWtiO8Y51aGGP6sC07ytnnDJwLFWe+I4smRWtjIbr7TcY1fbJv+lr8XPmB/wrnlX+KGFepw0ECD+QObJRGyg3wNn0TTeQ7q11M/5ONWgeAm89fDx57NDp+kQYZQjW1ZHApvZqV9nvmYxZoElpK4wr2sVMHrhYhXld3rb09SMl4pwINkhR8JkeVj48UPQcnNZ5F82lrb30Bq31DwDElCNLKgeUV1URMO7SSBCOIOqU+V6ZZ1drB2mYZeR2wDNSHwxWv6KvJ3v7kfJMkuYit0D3Ottjz5MBbr4IjdxFp+z2+begBXdSUXRzZZgp9vOBwlH+GUA0pKYWeqcsGOpZbKAp3jQrJXg7aSsFVin9X4cnx3krkU9oc7BrEzEwXRkZcand8DxzCjZCfhqEM00ynWiBqVEH98PM+67M/25JDRcKBiOfvdv40FTcvraYFt9MScc+r6hG9kOQDHwODdXeFNQmQhIDpc6pz9seV7vlXdiATwgeu4+L2hynRFEcX29UDhdjEfHw754BdOmxkOzrui+96boVgEMJD6EXU1GgMBj/7P5i/VEBhkfZUSs45yH56IcUbJAJaYyeQPE7HBzOrl9inHLq972RI2aUD4hq5Vam6J13L7PXMh46BER1bcFhd6JBSc1+nlUkIhRuvwRtMi9dIzEFYhMyFJkVPZhoiZdFkNTerpACNukb5b28ibC7Ri"
    KAFKA_SASL_PASSWORD: "AgCuBMzBi4ouyFo7fR5z6OlHOWsIwS88iScLGgcvaqT2CVFB1MBePCwQyFRTiK9YKRmvFwAVRi6Jp8JV7Mf8j9Y/nDX0NmwDQG+buvz0rexDaRbKjN6udT5no3iqrf5KVkJ+STl8p8fEFa5y4CN5bTI6JpoBniV0OER3yoFEs0eNWGM58jsSHnxttnHr1Ni/vJ4cgzALnmjBovnoZ5FESNflp7PWudcE0XPKQ7WzIGh6TMzE9JATVfKJBufZEaV53gPhJuGGcZiHYCgr4ZAKicvUMdguMJT8sBm+cr+YbycSDVuEDIzF9HVhLKsd7OpkAUZf6jCjO6eY63W1yeuN5mMYUVi5vjVSvfLURzp2kbP7KD7w3uFhqgOkH1xoPsJXqoWrdbOhxqw2cwqtd3ef5v92TxkpgI6K7TRBolDxNaEzoDxtUKjxg+KLBDntNAKHecMaqxfWdodmbd5fPvSRT4hpCUVLSXTh0fUcsWFaRhrQ1xtK5M5lE7/5vb19e40SogOv7MWT/e3WTqEvweUNlY01Cfz+nGWQ5XtVVoynOOJ+P+dh5wNpWkQnp3KgtGajCC4BeyCaP5en1iXlSCvO7T23fmY7S65jk9/+hQSbeNgDFnskNMVNNcGxhHdynCz21Szz8FqXxhEo2bTS32Bi3Ccb4ywJr4epOdioTJsigCcXqdt5giNnEf8+v/IQMmEqckc4ZCYzUIGj7GYEeqIIIuWPGd0NNsoJf9TFnwm00M5LGav5SExptzCuT1ZNvnGz+3wuQihvGGAzKJqPoIFbNoQV"

# =============================================================================
# Ingress 설정
# =============================================================================
ingress:
  enabled: false  # Saga orchestration service는 내부 서비스이므로 ingress 불필요

# =============================================================================
# 노드 선택자
# =============================================================================
nodeSelector: {}

# =============================================================================
# 톨러레이션
# =============================================================================
tolerations: []

# =============================================================================
# 어피니티
# =============================================================================
affinity: {}

# =============================================================================
# Cloud SQL Proxy 설정
# =============================================================================
cloudSqlProxy:
  enabled: true
  image: gcr.io/cloudsql-docker/gce-proxy:latest
  port: 3306
  instance: mong-develop:asia-northeast3:mong-mysql

# =============================================================================
# 추가 설정
# =============================================================================
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
imagePullSecrets: []

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70

lifecycle: {}
